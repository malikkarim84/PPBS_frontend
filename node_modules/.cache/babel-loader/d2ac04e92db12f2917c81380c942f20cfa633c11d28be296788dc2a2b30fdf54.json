{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projek_PPS\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [token, setToken] = useState('');\n  const [name, setName] = useState('');\n  const [expire, setExpire] = useState('');\n  const navigate = useNavigate();\n  const refreshToken = useCallback(async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/token');\n      setToken(response.data.accessToken);\n      const decoded = jwtDecode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        navigate('/');\n      }\n    }\n  }, [navigate]);\n  const getUsers = useCallback(async () => {\n    try {\n      const response = await axiosJWT.get('http://localhost:5000/users', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [axiosJWT, token]);\n  useEffect(() => {\n    refreshToken();\n  }, [refreshToken]);\n  useEffect(() => {\n    if (token) {\n      getUsers();\n    }\n  }, [token, getUsers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"M110rzb3YfCJc8xarMIPjkXkkYo=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\n\n// import React from 'react';\n\n// const Dashboard  = () => {\n//   const [name, setName] = useState();\n//   const [navigate, useNavigate] = useState(); \n//   // const [expire, setExpire] = useState();\n//   // const [users, setUsers] = useState([]);\n//   // const history = useNavigate();\n\n// useEffect(() => {\n//   refreshToken();\n// }, []);\n\n// const refreshToken = async() => {\n//   try {\n//     const response = await axios.get('http://localhost:5000/token');\n//     setToken(response.data.accessToken);\n//     const decoded = jwtDecode(response.data.accessToken);\n//     console.log(decoded);\n// //     setExpire(decoded.exp);\n//   } catch (error) {\n// //     if(error.response){\n// //       history(\"/\");\n//     }\n//   }\n// }, [history]);\n\n// const axiosJWT = axios.create();\n\n// axiosJWT.interceptors.request.use(async(config) => {\n//   const currentDate = new Date();\n//   if (expire * 1000 < currentDate.getTime()) {\n//     const response = await axios.get('http://localhost:5000/token');\n//     config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n//     setToken(response.data.accessToken);\n//     const decoded = jwtDecode(response.data.accessToken);\n//     setName(decoded.name);\n//     setExpire(decoded.exp);\n\n//   }\n//   return config;\n// }, (error)=> {\n//   return Promise.reject(error);\n// });\n\n// const getUsers = useCallback(async() => {\n//   try {\n//   const response = await axiosJWT.get('http://localhost:5000/users', {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//     }\n//   });\n//   console.log(response.data);\n// } catch (error) {\n//   console.error(error);\n// }\n// }, [axiosJWT, token]);\n\n// return (\n//   <div className='container mt-5'>\n//       <h1>Welcome Back: </h1>\n//   </div>\n//         <button onClick={getUsers} className='button is-info'>Get Users</button>\n//         <table className='table is-striped is-fullwidth'>\n//           <thead>\n//             <tr>\n//               <th>No</th>\n//               <th>Name</th>\n//               <th>Email</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             { users.map((user, index) => (\n//                 <tr key={user.id}>\n//                   <td>{index + 1}</td>\n//                   <td>{user.name}</td>\n//                   <td>{user.email}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//     </div>\n//  )\n// }\n\n// export default Dashboard\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","axios","jwtDecode","jsxDEV","_jsxDEV","Dashboard","_s","token","setToken","name","setName","expire","setExpire","navigate","refreshToken","response","get","data","accessToken","decoded","exp","error","getUsers","axiosJWT","headers","Authorization","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projek_PPS/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst Dashboard = () => {\r\n  const [token, setToken] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [expire, setExpire] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const refreshToken = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/token');\r\n      setToken(response.data.accessToken);\r\n      const decoded = jwtDecode(response.data.accessToken);\r\n      setName(decoded.name);\r\n      setExpire(decoded.exp);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        navigate('/');\r\n      }\r\n    }\r\n  }, [navigate]);\r\n\r\n  const getUsers = useCallback(async () => {\r\n    try {\r\n      const response = await axiosJWT.get('http://localhost:5000/users', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [axiosJWT, token]);\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n  }, [refreshToken]);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      getUsers();\r\n    }\r\n  }, [token, getUsers]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <p>Welcome, {name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n// import React from 'react';\r\n\r\n// const Dashboard  = () => {\r\n//   const [name, setName] = useState();\r\n//   const [navigate, useNavigate] = useState(); \r\n//   // const [expire, setExpire] = useState();\r\n//   // const [users, setUsers] = useState([]);\r\n//   // const history = useNavigate();\r\n  \r\n  // useEffect(() => {\r\n  //   refreshToken();\r\n  // }, []);\r\n\r\n  // const refreshToken = async() => {\r\n  //   try {\r\n  //     const response = await axios.get('http://localhost:5000/token');\r\n  //     setToken(response.data.accessToken);\r\n  //     const decoded = jwtDecode(response.data.accessToken);\r\n  //     console.log(decoded);\r\n  // //     setExpire(decoded.exp);\r\n  //   } catch (error) {\r\n  // //     if(error.response){\r\n  // //       history(\"/\");\r\n  //     }\r\n  //   }\r\n  // }, [history]);\r\n\r\n  // const axiosJWT = axios.create();\r\n\r\n  // axiosJWT.interceptors.request.use(async(config) => {\r\n  //   const currentDate = new Date();\r\n  //   if (expire * 1000 < currentDate.getTime()) {\r\n  //     const response = await axios.get('http://localhost:5000/token');\r\n  //     config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n  //     setToken(response.data.accessToken);\r\n  //     const decoded = jwtDecode(response.data.accessToken);\r\n  //     setName(decoded.name);\r\n  //     setExpire(decoded.exp);\r\n      \r\n  //   }\r\n  //   return config;\r\n  // }, (error)=> {\r\n  //   return Promise.reject(error);\r\n  // });\r\n\r\n  // const getUsers = useCallback(async() => {\r\n  //   try {\r\n  //   const response = await axiosJWT.get('http://localhost:5000/users', {\r\n  //     headers: {\r\n  //       Authorization: `Bearer ${token}`,\r\n  //     }\r\n  //   });\r\n  //   console.log(response.data);\r\n  // } catch (error) {\r\n  //   console.error(error);\r\n  // }\r\n  // }, [axiosJWT, token]);\r\n\r\n  // return (\r\n  //   <div className='container mt-5'>\r\n  //       <h1>Welcome Back: </h1>\r\n  //   </div>\r\n//         <button onClick={getUsers} className='button is-info'>Get Users</button>\r\n//         <table className='table is-striped is-fullwidth'>\r\n//           <thead>\r\n//             <tr>\r\n//               <th>No</th>\r\n//               <th>Name</th>\r\n//               <th>Email</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             { users.map((user, index) => (\r\n//                 <tr key={user.id}>\r\n//                   <td>{index + 1}</td>\r\n//                   <td>{user.name}</td>\r\n//                   <td>{user.email}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//     </div>\r\n//  )\r\n// }\r\n\r\n// export default Dashboard\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}