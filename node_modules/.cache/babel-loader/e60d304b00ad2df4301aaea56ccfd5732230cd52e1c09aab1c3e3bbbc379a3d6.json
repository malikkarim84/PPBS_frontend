{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projek_PPS\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import jwt_decode from 'jwt-decode';\n// import { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [name, setName] = useState(''); // Use these states as necessary\n\n  const refreshToken = () => {\n    // Implement the refresh logic if needed\n  };\n  useEffect(() => {\n    refreshToken();\n  }, []); // Add refreshToken to dependencies if it's a function\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"nVbhOIYDoHElhkRqYpJCqH0DXNE=\");\n_c = Dashboard;\nexport default Dashboard;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import jwt_decode, { jwtDecode } from \"jwt-decode\";\n// import { useHistory } from 'react-router-dom';\n\n// const Dashboard  = () => {\n//   const [name, setName] = useState();\n//   const [token, setToken] = useState(); \n//   // const [expire, setExpire] = useState();\n//   // const [users, setUsers] = useState([]);\n//   // const history = useNavigate();\n\n//   useEffect(() => {\n//     refreshToken();\n//   }, []);\n\n//   const refreshToken = async() => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/token');\n//       setToken(response.data.accessToken);\n//       const decoded = jwtDecode(token);\n//       console.log(decoded);\n//   //     setExpire(decoded.exp);\n//     } catch (error) {\n//   // //     if(error.response){\n//   // //       history(\"/\");\n//       }\n//     }\n//   // }\n\n//   // const axiosJWT = axios.create();\n\n//   // axiosJWT.interceptors.request.use(async(config) => {\n//   //   const currentDate = new Date();\n//   //   if (expire * 1000 < currentDate.getTime()) {\n//   //     const response = await axios.get('http://localhost:5000/token');\n//   //     config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n//   //     setToken(response.data.accessToken);\n//   //     const decoded = jwtDecode(response.data.accessToken);\n//   //     setName(decoded.name);\n//   //     setExpire(decoded.exp);\n\n//   //   }\n//   //   return config;\n//   // }, (error)=> {\n//   //   return Promise.reject(error);\n//   // });\n\n//   // const getUsers = useCallback(async() => {\n//   //   try {\n//   //   const response = await axiosJWT.get('http://localhost:5000/users', {\n//   //     headers: {\n//   //       Authorization: `Bearer ${token}`,\n//   //     }\n//   //   });\n//   //   console.log(response.data);\n//   // } catch (error) {\n//   //   console.error(error);\n//   // }\n//   // }, [axiosJWT, token]);\n\n//   return (\n//     <div className='container mt-5'>\n//         <h1>Welcome Back: </h1>\n//     </div>\n// //         <button onClick={getUsers} className='button is-info'>Get Users</button>\n// //         <table className='table is-striped is-fullwidth'>\n// //           <thead>\n// //             <tr>\n// //               <th>No</th>\n// //               <th>Name</th>\n// //               <th>Email</th>\n// //             </tr>\n// //           </thead>\n// //           <tbody>\n// //             { users.map((user, index) => (\n// //                 <tr key={user.id}>\n// //                   <td>{index + 1}</td>\n// //                   <td>{user.name}</td>\n// //                   <td>{user.email}</td>\n// //               </tr>\n// //             ))}\n// //           </tbody>\n// //         </table>\n// //     </div>\n//  )\n// }\n\n// export default Dashboard\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","_s","name","setName","refreshToken","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projek_PPS/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// import jwt_decode from 'jwt-decode';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const [name, setName] = useState(''); // Use these states as necessary\r\n\r\n  const refreshToken = () => {\r\n    // Implement the refresh logic if needed\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n  }, []); // Add refreshToken to dependencies if it's a function\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome, {name}!</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import jwt_decode, { jwtDecode } from \"jwt-decode\";\r\n// import { useHistory } from 'react-router-dom';\r\n\r\n// const Dashboard  = () => {\r\n//   const [name, setName] = useState();\r\n//   const [token, setToken] = useState(); \r\n//   // const [expire, setExpire] = useState();\r\n//   // const [users, setUsers] = useState([]);\r\n//   // const history = useNavigate();\r\n  \r\n//   useEffect(() => {\r\n//     refreshToken();\r\n//   }, []);\r\n\r\n//   const refreshToken = async() => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:5000/token');\r\n//       setToken(response.data.accessToken);\r\n//       const decoded = jwtDecode(token);\r\n//       console.log(decoded);\r\n//   //     setExpire(decoded.exp);\r\n//     } catch (error) {\r\n//   // //     if(error.response){\r\n//   // //       history(\"/\");\r\n//       }\r\n//     }\r\n//   // }\r\n\r\n//   // const axiosJWT = axios.create();\r\n\r\n//   // axiosJWT.interceptors.request.use(async(config) => {\r\n//   //   const currentDate = new Date();\r\n//   //   if (expire * 1000 < currentDate.getTime()) {\r\n//   //     const response = await axios.get('http://localhost:5000/token');\r\n//   //     config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n//   //     setToken(response.data.accessToken);\r\n//   //     const decoded = jwtDecode(response.data.accessToken);\r\n//   //     setName(decoded.name);\r\n//   //     setExpire(decoded.exp);\r\n      \r\n//   //   }\r\n//   //   return config;\r\n//   // }, (error)=> {\r\n//   //   return Promise.reject(error);\r\n//   // });\r\n\r\n//   // const getUsers = useCallback(async() => {\r\n//   //   try {\r\n//   //   const response = await axiosJWT.get('http://localhost:5000/users', {\r\n//   //     headers: {\r\n//   //       Authorization: `Bearer ${token}`,\r\n//   //     }\r\n//   //   });\r\n//   //   console.log(response.data);\r\n//   // } catch (error) {\r\n//   //   console.error(error);\r\n//   // }\r\n//   // }, [axiosJWT, token]);\r\n\r\n//   return (\r\n//     <div className='container mt-5'>\r\n//         <h1>Welcome Back: </h1>\r\n//     </div>\r\n// //         <button onClick={getUsers} className='button is-info'>Get Users</button>\r\n// //         <table className='table is-striped is-fullwidth'>\r\n// //           <thead>\r\n// //             <tr>\r\n// //               <th>No</th>\r\n// //               <th>Name</th>\r\n// //               <th>Email</th>\r\n// //             </tr>\r\n// //           </thead>\r\n// //           <tbody>\r\n// //             { users.map((user, index) => (\r\n// //                 <tr key={user.id}>\r\n// //                   <td>{index + 1}</td>\r\n// //                   <td>{user.name}</td>\r\n// //                   <td>{user.email}</td>\r\n// //               </tr>\r\n// //             ))}\r\n// //           </tbody>\r\n// //         </table>\r\n// //     </div>\r\n//  )\r\n// }\r\n\r\n// export default Dashboard\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtC,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzB;EAAA,CACD;EAEDR,SAAS,CAAC,MAAM;IACdQ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAM,QAAA,eACEN,OAAA;MAAAM,QAAA,GAAI,WAAS,EAACH,IAAI,EAAC,GAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAACR,EAAA,CAhBID,SAAS;AAAAU,EAAA,GAATV,SAAS;AAkBf,eAAeA,SAAS;;AAGxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}